# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Region {
  id: String!
  name: String!
}

type Location {
  id: String!
  name: String!
  region: Region!
}

type Platform {
  id: String!
  name: String!
  projects: [Project!]!
}

type Tendency {
  id: String!
  name: String!
  users: [User!]!
}

type User {
  id: String!
  email: String!
  name: String!
  createdAt: DateTime!
  deletedAt: DateTime
  career: CAREER_ENUM
  point: Int!
  tendencys: [Tendency!]
  position: Position
  types: [Type!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum CAREER_ENUM {
  STUDENT
  JOBSEEKER
  NEWCOMER
}

type Type {
  id: String!
  name: String!
  users: [User!]!
}

type Project {
  id: String!
  name: String!
  teamname: String!
  intro: String!
  method: METHOD_ENUM!
  recruitDate: DateTime!
  imgUrl: String!
  skill: String!
  description: String!
  isComplete: Boolean!
  type: Type!
  location: Location!
  leader: User!
  positions: [Position!]!
  platforms: [Platform!]!
  createdAt: DateTime!
  deletedAt: DateTime!
}

enum METHOD_ENUM {
  MEET
  UNTACT
  MEDIATE
}

type Position {
  id: String!
  name: String!
  projects: [Project!]!
}

type Token {
  accessToken: String!
  onboarding: Boolean
}

type Query {
  fetchLocations: [Location!]!
  fetchPlatforms: [Platform!]!
  fetchPositions: [Position!]!
  fetchRegions: [Region!]!
  fetchTendencys: [Tendency!]!
  fetchTypes: [Type!]!
  fetchUser: User!
}

type Mutation {
  login(email: String!, password: String!): Token!
  restoreAccessToken: Token!
  logout: String!
  createLocation(name: String!): Location!
  createPlatform(name: String!): Platform!
  createPosition(name: String!): Position!
  createRegion(name: String!): Region!
  createTendency(name: String!): Tendency!
  createType(name: String!): Type!
  sendTokenToEmail(email: String!): String!
  checkTokenToEmail(email: String!, token: String!): Boolean!
  createUser(createUserInput: CreateUserInput!): User!
  updateUserByOnboard(updateUserOnboardInput: UpdateUserOnboardInput!): User!
}

input CreateUserInput {
  email: String!
  name: String!
  password: String!
}

input UpdateUserOnboardInput {
  career: CAREER_ENUM
  tendencyId: [String!]!
  positionId: String!
  typeId: [String!]!
}